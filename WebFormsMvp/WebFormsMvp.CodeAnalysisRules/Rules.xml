<?xml version="1.0" encoding="utf-8"?>
<!--

  Check ids are allocated using a specific formula - please follow it.
  
  All check ids are MVP, followed by a 4 digit number:         MVPxxxx
                                                                  ║║║║
  The first digit specifies the style of the rule  ═══════════════╝║║║
    1) Naming                                                      ║║║
    2) Design                                                      ║║║
                                                                   ║║║
  The second digit specifies the target of the rule  ══════════════╝║║
    1) Presenter                                                    ║║
    2) View interface                                               ║║
    3) View model                                                   ║║
                                                                    ║║
  The last two digits are just sequential  ═════════════════════════╩╝

-->
<Rules FriendlyName="ASP.NET Web Forms Model-View-Presenter Rules">
  <Rule TypeName="PresentersShouldHaveCorrectSuffix" Category="WebFormsMvp" CheckId="MVP1001">
    <Name>Presenters should have correct suffix</Name>
    <Description>All presenter implementations should have their type name suffixed with the word 'Presenter'. For example, 'LoginPresenter'.</Description>
    <Url>http://wiki.webformsmvp.com/index.php?title=CodeAnalysis:MVP1001</Url>
    <Resolution>The name of type {0} does not end with the suffix 'Presenter'. Add the suffix to the type name.</Resolution>
    <Email></Email>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>Breaking</FixCategories>
    <Owner />
  </Rule>
  <Rule TypeName="PresentersShouldHaveDescriptiveNames" Category="WebFormsMvp" CheckId="MVP1002">
    <Name>Presenters should have descriptive names</Name>
    <Description>All presenter implementations should have a type name that describes their function. For example, 'LoginPresenter'.</Description>
    <Url>http://wiki.webformsmvp.com/index.php?title=CodeAnalysis:MVP1002</Url>
    <Resolution>The name of type {0} does not describe the presenter's function. Use a more descriptive name.</Resolution>
    <Email></Email>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>Breaking</FixCategories>
    <Owner />
  </Rule>
  <Rule TypeName="PresentersShouldUseProvidedBaseImplementation" Category="WebFormsMvp" CheckId="MVP2001">
    <Name>Presenters should use provided base implementation</Name>
    <Description>All presenters should inherit from WebFormsMvp.Presenter&lt;TView&gt;. They should not implement WebFormsMvp.IPresenter or WebFormsMvp.IPresenter&lt;TView&gt; directly.</Description>
    <Url>http://wiki.webformsmvp.com/index.php?title=CodeAnalysis:MVP2001</Url>
    <Resolution>{0} does not inherit from WebFormsMvp.Presenter&lt;TView&gt;. Instead, it implements WebFormsMvp.IPresenter or WebFormsMvp.IPresenter&lt;TView&gt; directly. Change the type to inherit from WebFormsMvp.Presenter&lt;TView&gt;.</Resolution>
    <Email></Email>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
    <Owner />
  </Rule>
</Rules>